// Code generated by mockery v2.34.2. DO NOT EDIT.

package mocks

import (
	factory "github.com/goravel/framework/contracts/database/factory"
	mock "github.com/stretchr/testify/mock"
)

// Model is an autogenerated mock type for the Model type
type Model struct {
	mock.Mock
}

// Factory provides a mock function with given fields:
func (_m *Model) Factory() factory.Factory {
	ret := _m.Called()

	var r0 factory.Factory
	if rf, ok := ret.Get(0).(func() factory.Factory); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(factory.Factory)
		}
	}

	return r0
}

// NewModel creates a new instance of Model. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewModel(t interface {
	mock.TestingT
	Cleanup(func())
}) *Model {
	mock := &Model{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
